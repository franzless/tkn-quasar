{"remainingRequest":"C:\\Projekte\\tkn-quasar\\node_modules\\babel-loader\\lib\\index.js!C:\\Projekte\\tkn-quasar\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Projekte\\tkn-quasar\\src\\store\\index.js","dependencies":[{"path":"C:\\Projekte\\tkn-quasar\\src\\store\\index.js","mtime":1573219006768},{"path":"C:\\Projekte\\tkn-quasar\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1573019599809},{"path":"C:\\Projekte\\tkn-quasar\\node_modules\\babel-loader\\lib\\index.js","mtime":1573019593932},{"path":"C:\\Projekte\\tkn-quasar\\node_modules\\eslint-loader\\index.js","mtime":1573019613838}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Projekte/tkn-quasar/src/store/index.js"],"names":["Vue","Vuex","db","use","docRef","collection","Store","state","dialog_neuer","data","loading","snack","items","mutations","SET_dialog_NEUER","payload","SET_DATA","SET_LOADING","SET_SNACK","SET_ITEMS","length","dates","map","m","datum","filter","value","index","self","indexOf","x","cache","f","daten","forEach","c","push","sort","a","b","beginn","slice","result","unix","UID","uid","getters","dialog_NEUER","get_loading","get_snack","get_items","actions","SET_NEUER_EINTRAG","context","commit","add","then","response","snackColor","status","snackText","catch","err","console","log","QUERY_ITEMS","where","orderBy","onSnapshot","snap","doc","id","modules"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport db from '@/db/firebaseinit'\r\n\r\nVue.use(Vuex)\r\nconst docRef = db.collection(\"TKN\")\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    dialog_neuer:false,\r\n    data:[],\r\n    loading:false,\r\n    snack:{},\r\n    items:[]\r\n  },\r\n  mutations: {\r\n    SET_dialog_NEUER:(state,payload)=>{\r\n      state.dialog_neuer = payload\r\n    },\r\n    SET_DATA:(state,payload)=>{\r\n      state.data = payload      \r\n    },\r\n    SET_LOADING:(state,payload)=>{\r\n      state.loading = payload\r\n    },\r\n    SET_SNACK:(state,payload)=>{\r\n      state.snack=payload\r\n    },\r\n    SET_ITEMS:(state,payload)=>{\r\n      if(payload.length>0){\r\n        //Alle vorhandenen Datums in ein array schreiben\r\n      var dates = payload.map(m=>m.datum).filter((value, index, self)=>{return self.indexOf(value) === index;})\r\n      //über jedes Datum iterrieren     \r\n      for(var x = 0;x<dates.length;x++){\r\n        //alle Objekte mit dem entsprechenden Datum in Variable Cache schreiben\r\n        var cache = []\r\n        cache = payload.filter(f => f.datum === dates[x])\r\n        //benötigte Datenstruktur zusammenbauen => var daten\r\n        var daten = []        \r\n        cache.forEach(c=>daten.push(c.daten))\r\n        //Sortieren, falls mehrere Einträge pro Datum\r\n        daten.sort(function(a,b){return a.beginn.slice(0,2) -b.beginn.slice(0,2) })\r\n        //fertiges Objekt pushen               \r\n        var result = {datum:cache[0].datum,unix:cache[0].unix,UID:cache[0].uid,daten}        \r\n        state.items.push(result)\r\n    }}else{\r\n      state.items= []\r\n  }}\r\n  },\r\n  getters:{\r\n    dialog_NEUER:state=>{\r\n      return state.dialog_neuer\r\n    },\r\n    get_loading:state=>{\r\n      return state.loading\r\n    },\r\n    get_snack:state=>{\r\n      return state.snack\r\n    },\r\n    get_items:state=>{\r\n      return state.items\r\n    }\r\n  },\r\n  actions: {      \r\n    SET_NEUER_EINTRAG:(context,payload)=>{ \r\n  /*      docRef.where(\"unix\",\"==\",\"1570744800\").get().then(doc=>{\r\n        if(doc.exists){          \r\n          var daten_merge = []\r\n          doc.data().forEach(x=>{daten_merge.push(x.daten)})\r\n          daten_merge.push(payload.daten)\r\n           var merge = {\r\n            datum:payload.datum,unix:payload.unix,daten_merge\r\n          }\r\n          docRef.doc(doc.id).set(merge).then(response=>{\r\n            console.log(response)        \r\n           context.commit('SET_dialog_NEUER',false)\r\n           context.commit('SET_LOADING',false)\r\n           context.commit('SET_SNACK',{snackColor:'success',status:true,snackText:'Erfolg'})\r\n          })\r\n          .catch(err=>{\r\n            context.commit('SET_SNACK',{Snackcolor:'error',status:true,snackText:err})\r\n            console.log(err)})         \r\n      \r\n        }else{\r\n          console.log('ex nicht')\r\n          docRef.add(payload).then(response=>{\r\n            console.log(response)        \r\n           context.commit('SET_dialog_NEUER',false)\r\n           context.commit('SET_LOADING',false)\r\n           context.commit('SET_SNACK',{snackColor:'success',status:true,snackText:'Erfolg'})\r\n          })\r\n          .catch(err=>{\r\n            context.commit('SET_SNACK',{Snackcolor:'error',status:true,snackText:err})\r\n            console.log(err)})\r\n        }\r\n      })  */\r\n        context.commit('SET_LOADING',true)\r\n      docRef.add(payload)\r\n      .then(response=>{            \r\n       context.commit('SET_dialog_NEUER',false)\r\n       context.commit('SET_LOADING',false)\r\n       context.commit('SET_SNACK',{snackColor:'success',status:true,snackText:'Erfolg'})\r\n      })\r\n      .catch(err=>{\r\n        context.commit('SET_SNACK',{snackColor:'error',status:true,snackText:err})\r\n        console.log(err)}) \r\n    }, \r\n    QUERY_ITEMS:(context)=>{\r\n        var daten = []\r\n        context.commit('SET_ITEMS',daten)       \r\n      docRef.where('UID','==','u66WmdRu57bAdn4nTWg9bvCPdcZ2').orderBy(\"unix\",\"desc\").onSnapshot(snap=>{        \r\n        snap.forEach(doc=>{          \r\n           daten.push({...doc.data(),...doc.id})\r\n        })\r\n        context.commit('SET_ITEMS',daten)})\r\n    }\r\n  },\r\n  modules: {\r\n  }\r\n})\r\n"]}]}