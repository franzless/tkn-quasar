{"remainingRequest":"C:\\Projekte\\tkn-quasar\\node_modules\\babel-loader\\lib\\index.js!C:\\Projekte\\tkn-quasar\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Projekte\\tkn-quasar\\src\\store\\index.js","dependencies":[{"path":"C:\\Projekte\\tkn-quasar\\src\\store\\index.js","mtime":1573654620920},{"path":"C:\\Projekte\\tkn-quasar\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1573019599809},{"path":"C:\\Projekte\\tkn-quasar\\node_modules\\babel-loader\\lib\\index.js","mtime":1573019593932},{"path":"C:\\Projekte\\tkn-quasar\\node_modules\\eslint-loader\\index.js","mtime":1573019613838}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Projekte/tkn-quasar/src/store/index.js"],"names":["Vue","Vuex","db","use","docRef","collection","Store","state","dialog_neuer","data","loading","items","frame","neu","funktion","mutations","SET_dialog_NEUER","payload","SET_DATA","SET_LOADING","SET_ITEMS","console","log","length","dates","map","m","datum","filter","value","index","self","indexOf","x","cache","f","daten","forEach","c","push","sort","a","b","beginn","slice","result","unix","UID","id","SET_frame","SET_neu","SET_funktion","getters","dialog_NEUER","get_loading","get_items","actions","ACTION_EINTRAG","context","add","doc","update","Promise","resolve","reject","commit","then","response","catch","err","setTimeout","ACTION_QUERY_ITEMS","where","orderBy","onSnapshot","snap","modules"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport db from '@/db/firebaseinit'\r\n\r\nVue.use(Vuex)\r\nconst docRef = db.collection(\"TKN\")\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    dialog_neuer:false,\r\n    data:[],\r\n    loading:false,    \r\n    items:[],\r\n    frame:{},\r\n    neu:{},\r\n    funktion:''\r\n  },\r\n  mutations: {\r\n    SET_dialog_NEUER:(state,payload)=>{\r\n      state.dialog_neuer = payload\r\n    },\r\n    SET_DATA:(state,payload)=>{\r\n      state.data = payload      \r\n    },\r\n    SET_LOADING:(state,payload)=>{\r\n      state.loading = payload\r\n    },    \r\n    SET_ITEMS:(state,payload)=>{\r\n      console.log(payload)\r\n      if(payload.length>0){\r\n        //Alle vorhandenen Datums in ein array schreiben\r\n      var dates = payload.map(m=>m.datum).filter((value, index, self)=>{return self.indexOf(value) === index;})\r\n      //über jedes Datum iterrieren     \r\n      for(var x = 0;x<dates.length;x++){\r\n        //alle Objekte mit dem entsprechenden Datum in Variable Cache schreiben\r\n        var cache = []\r\n        cache = payload.filter(f => f.datum === dates[x])\r\n        //benötigte Datenstruktur zusammenbauen => var daten\r\n        var daten = []        \r\n        cache.forEach(c=>daten.push(c.daten))\r\n        //Sortieren, falls mehrere Einträge pro Datum\r\n        daten.sort(function(a,b){return a.beginn.slice(0,2) -b.beginn.slice(0,2) })\r\n        //fertiges Objekt pushen               \r\n        var result = {datum:cache[0].datum,unix:cache[0].unix,UID:cache[0].UID,daten,id:cache[0].id}        \r\n        state.items.push(result)\r\n    }}else{\r\n      state.items= []\r\n    }},\r\n    SET_frame:(state,payload)=>{\r\n    state.frame = payload\r\n   },\r\n   SET_neu:(state,payload)=>{\r\n     state.neu = payload\r\n   },\r\n   SET_funktion:(state,payload)=>{\r\n     state.funktion = payload\r\n   }\r\n  },\r\n  getters:{\r\n    dialog_NEUER:state=>{\r\n      return state.dialog_neuer\r\n    },\r\n    get_loading:state=>{\r\n      return state.loading\r\n    },   \r\n    get_items:state=>{\r\n      return state.items\r\n    },\r\n    frame:state=>{\r\n      return state.frame\r\n    },\r\n    neu:state=>{\r\n      return state.neu\r\n    },\r\n    funktion:state=>{\r\n      return state.funktion\r\n    }\r\n  },\r\n  actions: {      \r\n    ACTION_EINTRAG:async(context,payload)=>{\r\n\r\n\r\n      var funktion = context.getters.funktion\r\n      if(funktion === 'add'){\r\n        funktion = docRef.add(payload)\r\n      }else{\r\n         funktion= docRef.doc(payload.id).update(payload)\r\n        }\r\n\r\n\r\n      return new Promise((resolve,reject)=>{      \r\n        context.commit('SET_LOADING',true)\r\n          funktion.then(response=>{ \r\n              if(response){                \r\n                resolve()\r\n                context.commit('SET_dialog_NEUER',false)\r\n                context.commit('SET_LOADING',false)\r\n              }else{\r\n                reject('Fehler bei der Verarbeitung')}\r\n          }) \r\n          .catch(err=>{\r\n            reject(err)        \r\n          })\r\n        setTimeout(()=>{\r\n          context.commit('SET_LOADING',false)          \r\n          reject('Datenbank nicht erreichbar => Timeout')\r\n        },5000)\r\n        }) \r\n\r\n    },\r\n      \r\n  /*      docRef.where(\"unix\",\"==\",\"1570744800\").get().then(doc=>{\r\n        if(doc.exists){          \r\n          var daten_merge = []\r\n          doc.data().forEach(x=>{daten_merge.push(x.daten)})\r\n          daten_merge.push(payload.daten)\r\n           var merge = {\r\n            datum:payload.datum,unix:payload.unix,daten_merge\r\n          }\r\n          docRef.doc(doc.id).set(merge).then(response=>{\r\n            console.log(response)        \r\n           context.commit('SET_dialog_NEUER',false)\r\n           context.commit('SET_LOADING',false)\r\n           context.commit('SET_SNACK',{snackColor:'success',status:true,snackText:'Erfolg'})\r\n          })\r\n          .catch(err=>{\r\n            context.commit('SET_SNACK',{Snackcolor:'error',status:true,snackText:err})\r\n            console.log(err)})         \r\n      \r\n        }else{\r\n          console.log('ex nicht')\r\n          docRef.add(payload).then(response=>{\r\n            console.log(response)        \r\n           context.commit('SET_dialog_NEUER',false)\r\n           context.commit('SET_LOADING',false)\r\n           context.commit('SET_SNACK',{snackColor:'success',status:true,snackText:'Erfolg'})\r\n          })\r\n          .catch(err=>{\r\n            context.commit('SET_SNACK',{Snackcolor:'error',status:true,snackText:err})\r\n            console.log(err)})\r\n        }\r\n      })  */\r\n        \r\n     \r\n    ACTION_QUERY_ITEMS:(context)=>{\r\n        var daten = []\r\n        context.commit('SET_ITEMS',daten)       \r\n      docRef.where('UID','==','u66WmdRu57bAdn4nTWg9bvCPdcZ2').orderBy(\"unix\",\"desc\").onSnapshot(snap=>{        \r\n        snap.forEach(doc=>{          \r\n           daten.push({...doc.data(),id:doc.id})\r\n        })\r\n        context.commit('SET_ITEMS',daten)})\r\n    },    \r\n  },\r\n  modules: {\r\n  }\r\n})\r\n"]}]}