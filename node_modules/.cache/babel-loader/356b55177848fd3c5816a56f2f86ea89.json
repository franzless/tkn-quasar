{"remainingRequest":"C:\\Projekte\\tkn-quasar\\node_modules\\babel-loader\\lib\\index.js!C:\\Projekte\\tkn-quasar\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Projekte\\tkn-quasar\\src\\store\\index.js","dependencies":[{"path":"C:\\Projekte\\tkn-quasar\\src\\store\\index.js","mtime":1575526706634},{"path":"C:\\Projekte\\tkn-quasar\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1573019599809},{"path":"C:\\Projekte\\tkn-quasar\\node_modules\\babel-loader\\lib\\index.js","mtime":1573019593932},{"path":"C:\\Projekte\\tkn-quasar\\node_modules\\eslint-loader\\index.js","mtime":1573019613838}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Projekte/tkn-quasar/src/store/index.js"],"names":["Vue","Vuex","db","use","docRef","collection","Store","state","dialog_neuer","data","loading","items","frame","neu","krank","beginn","ende","pause","datum","kommentar","funktion","mutations","SET_dialog_NEUER","payload","SET_DATA","SET_LOADING","SET_ITEMS","SET_frame","SET_neu","SET_funktion","getters","dialog_NEUER","get_loading","get_items","actions","ACTION_EINTRAG","context","add","doc","id","delete","update","Promise","resolve","reject","commit","then","response","catch","err","setTimeout","ACTION_QUERY_ITEMS","where","orderBy","onSnapshot","snap","fetched","constructed","forEach","push","dates","map","m","filter","value","index","self","indexOf","x","length","cache","f","daten","c","sort","a","b","slice","result","unix","UID","modules"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport db from '@/db/firebaseinit'\r\n\r\nVue.use(Vuex)\r\nconst docRef = db.collection(\"TKN\")\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    dialog_neuer:false,\r\n    data:[],\r\n    loading:false,    \r\n    items:[],\r\n    frame:{},\r\n    neu:{krank:false,beginn:'',ende:'',pause:'',datum:'',kommentar:''},\r\n    funktion:''\r\n  },\r\n  mutations: {\r\n    SET_dialog_NEUER:(state,payload)=>{\r\n      state.dialog_neuer = payload\r\n    },\r\n    SET_DATA:(state,payload)=>{\r\n      state.data = payload      \r\n    },\r\n    SET_LOADING:(state,payload)=>{\r\n      state.loading = payload\r\n    },    \r\n    SET_ITEMS:(state,payload)=>{            \r\n      state.items = payload        \r\n      },\r\n    SET_frame:(state,payload)=>{\r\n    state.frame = payload\r\n   },\r\n   SET_neu:(state,payload)=>{\r\n     state.neu = payload\r\n   },\r\n   SET_funktion:(state,payload)=>{\r\n     state.funktion = payload\r\n   }\r\n  },\r\n  getters:{\r\n    dialog_NEUER:state=>{\r\n      return state.dialog_neuer\r\n    },\r\n    get_loading:state=>{\r\n      return state.loading\r\n    },   \r\n    get_items:state=>{\r\n      return state.items\r\n    },\r\n    frame:state=>{\r\n      return state.frame\r\n    },\r\n    neu:state=>{\r\n      return state.neu\r\n    },\r\n    funktion:state=>{\r\n      return state.funktion\r\n    }\r\n  },\r\n  actions: {      \r\n    ACTION_EINTRAG:async(context,payload)=>{\r\n\r\n      var funktion = context.getters.funktion\r\n      if(funktion === 'add'){\r\n        funktion = docRef.add(payload)\r\n      }\r\n      else if(funktion ==='del'){\r\n        funktion = docRef.doc(payload.id).delete()\r\n      }\r\n      else{\r\n         funktion= docRef.doc(payload.id).update(payload)\r\n        }\r\n\r\n\r\n      return new Promise((resolve,reject)=>{      \r\n        context.commit('SET_LOADING',true)\r\n          funktion.then(response=>{\r\n                             \r\n                resolve()\r\n                context.commit('SET_dialog_NEUER',false)\r\n                context.commit('SET_LOADING',false)\r\n             \r\n          }) \r\n          .catch(err=>{\r\n            reject(err)        \r\n          })\r\n        setTimeout(()=>{\r\n          context.commit('SET_LOADING',false)          \r\n          reject('Datenbank nicht erreichbar => Timeout')\r\n        },5000)\r\n        }) \r\n\r\n    },\r\n      \r\n  /*      docRef.where(\"unix\",\"==\",\"1570744800\").get().then(doc=>{\r\n        if(doc.exists){          \r\n          var daten_merge = []\r\n          doc.data().forEach(x=>{daten_merge.push(x.daten)})\r\n          daten_merge.push(payload.daten)\r\n           var merge = {\r\n            datum:payload.datum,unix:payload.unix,daten_merge\r\n          }\r\n          docRef.doc(doc.id).set(merge).then(response=>{\r\n            console.log(response)        \r\n           context.commit('SET_dialog_NEUER',false)\r\n           context.commit('SET_LOADING',false)\r\n           context.commit('SET_SNACK',{snackColor:'success',status:true,snackText:'Erfolg'})\r\n          })\r\n          .catch(err=>{\r\n            context.commit('SET_SNACK',{Snackcolor:'error',status:true,snackText:err})\r\n            console.log(err)})         \r\n      \r\n        }else{\r\n          console.log('ex nicht')\r\n          docRef.add(payload).then(response=>{\r\n            console.log(response)        \r\n           context.commit('SET_dialog_NEUER',false)\r\n           context.commit('SET_LOADING',false)\r\n           context.commit('SET_SNACK',{snackColor:'success',status:true,snackText:'Erfolg'})\r\n          })\r\n          .catch(err=>{\r\n            context.commit('SET_SNACK',{Snackcolor:'error',status:true,snackText:err})\r\n            console.log(err)})\r\n        }\r\n      })  */\r\n        \r\n     \r\n    ACTION_QUERY_ITEMS:async(context)=>{\r\n      \r\n                        \r\n        await docRef.where('UID','==','u66WmdRu57bAdn4nTWg9bvCPdcZ2').orderBy(\"unix\",\"desc\").onSnapshot(snap=>{\r\n          var fetched = []\r\n          var constructed= []  \r\n        snap.forEach(doc=>{                   \r\n           fetched.push({...doc.data(),id:doc.id})\r\n        })\r\n        //Alle vorhandenen Datums in ein array schreiben\r\n        var dates = fetched.map(m=>m.datum).filter((value, index, self)=>{return self.indexOf(value) === index;})\r\n      //über jedes Datum iterrieren     \r\n      for(var x = 0;x<dates.length;x++){\r\n        //alle Objekte mit dem entsprechenden Datum in Variable Cache schreiben\r\n        var cache = []\r\n        cache = fetched.filter(f => f.datum === dates[x])\r\n        //benötigte Datenstruktur zusammenbauen => var daten\r\n        var daten = []        \r\n        cache.forEach(c=>daten.push(c.daten))\r\n        //Sortieren, falls mehrere Einträge pro Datum\r\n        daten.sort(function(a,b){return a.beginn.slice(0,2) -b.beginn.slice(0,2) })\r\n        //fertiges Objekt pushen               \r\n        var result = {datum:cache[0].datum,unix:cache[0].unix,UID:cache[0].UID,daten,id:cache[0].id,krank:cache[0].krank}        \r\n        constructed.push(result)\r\n    } context.commit('SET_ITEMS',constructed)})        \r\n       \r\n        \r\n    },    \r\n  },\r\n  modules: {\r\n  }\r\n})\r\n"]}]}